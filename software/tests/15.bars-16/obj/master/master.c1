;
; File generated by cc65 v 2.17 - Git 9299e550a
;
	.fopt		compiler,"cc65 v 2.17 - Git 9299e550a"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "master.c", 761, 1556286437
	.dbg		file, "../common/compat.h", 5041, 1551453077
	.dbg		file, "/root/work/projects/8Bit/devtools/cc65/include/atmos.h", 5802, 1510257184
	.dbg		file, "/root/work/projects/8Bit/devtools/cc65/include/_6522.h", 3781, 1404243125
	.dbg		file, "/root/work/projects/8Bit/devtools/cc65/include/ctype.h", 8462, 1532768029
	.dbg		file, "/root/work/projects/8Bit/devtools/cc65/include/string.h", 5104, 1527874792
	.dbg		file, "/root/work/projects/8Bit/devtools/cc65/include/stddef.h", 3057, 1399754739
	.dbg		file, "/root/work/projects/8Bit/devtools/cc65/include/stdio.h", 6189, 1517595656
	.dbg		file, "/root/work/projects/8Bit/devtools/cc65/include/stdarg.h", 2913, 1399754739
	.dbg		file, "/root/work/projects/8Bit/devtools/cc65/include/stdlib.h", 5748, 1434990593
	.dbg		file, "../common/oricexos.h", 3468, 1556278581
	.dbg		file, "../common/pp.h", 790, 1554828143
	.dbg		file, "../common/libsedoric.h", 809, 1555090331
	.forceimport	__STARTUP__
	.dbg		sym, "printf", "00", extern, "_printf"
	.dbg		sym, "cls", "00", extern, "_cls"
	.dbg		sym, "paper", "00", extern, "_paper"
	.dbg		sym, "ink", "00", extern, "_ink"
	.dbg		sym, "_sleept", "00", extern, "__sleept"
	.dbg		sym, "_sleep", "00", extern, "__sleep"
	.dbg		sym, "reset_exos", "00", extern, "_reset_exos"
	.dbg		sym, "_pp_cmd_ptr", "00", extern, "__pp_cmd_ptr"
	.dbg		sym, "_pp_send", "00", extern, "__pp_send"
	.dbg		sym, "sed_fname", "00", extern, "_sed_fname"
	.dbg		sym, "sed_begin", "00", extern, "_sed_begin"
	.dbg		sym, "sed_end", "00", extern, "_sed_end"
	.dbg		sym, "sed_size", "00", extern, "_sed_size"
	.dbg		sym, "sed_err", "00", extern, "_sed_err"
	.import		_printf
	.import		_cls
	.import		_paper
	.import		_ink
	.import		__sleept
	.import		__sleep
	.import		_reset_exos
	.import		__pp_cmd_ptr
	.import		__pp_send
	.import		_sed_fname
	.import		_sed_begin
	.import		_sed_end
	.import		_sed_size
	.import		_sed_err
	.export		_execfile
	.export		_savefile
	.export		_loadfile
	.export		_main

.segment	"DATA"

_slave_buffer:
	.word	$2000
_slave_code:
	.word	$2000

.segment	"RODATA"

L0044:
	.byte	$0A,$53,$65,$6E,$64,$69,$6E,$67,$20,$53,$4C,$41,$56,$45,$2E,$43
	.byte	$4F,$4D,$20,$28,$25,$64,$25,$64,$20,$62,$79,$74,$65,$73,$29,$00
L002C:
	.byte	$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$0A,$4C,$6F,$61,$64,$69,$6E
	.byte	$67,$20,$53,$4C,$41,$56,$45,$2E,$43,$4F,$4D,$00
L004D:
	.byte	$0A,$4D,$61,$73,$74,$65,$72,$20,$64,$6F,$6E,$65,$2E,$00
L0030	:=	L002C+18

.segment	"BSS"

_ppc:
	.res	8,$00
_len:
	.res	2,$00
_rc:
	.res	2,$00

; ---------------------------------------------------------------
; void __near__ execfile (__near__ const unsigned char *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_execfile: near

	.import		_sed_execfile
	.dbg	func, "execfile", "00", extern, "_execfile"
	.dbg	sym, "fname", "00", auto, 0
	.dbg	sym, "sed_execfile", "00", extern, "_sed_execfile"

.segment	"CODE"

;
; {
;
	.dbg	line, "../common/libsedoric.h", 12
	jsr     pushax
;
; sed_fname = fname;
;
	.dbg	line, "../common/libsedoric.h", 14
	jsr     ldax0sp
	sta     _sed_fname
	stx     _sed_fname+1
;
; sed_execfile();    
;
	.dbg	line, "../common/libsedoric.h", 15
	jsr     _sed_execfile
;
; }
;
	.dbg	line, "../common/libsedoric.h", 16
	jmp     incsp2
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ savefile (__near__ const unsigned char *, __near__ void *, unsigned int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_savefile: near

	.import		_sed_savefile
	.dbg	func, "savefile", "00", extern, "_savefile"
	.dbg	sym, "fname", "00", auto, 4
	.dbg	sym, "buf", "00", auto, 2
	.dbg	sym, "len", "00", auto, 0
	.dbg	sym, "sed_savefile", "00", extern, "_sed_savefile"

.segment	"CODE"

;
; {
;
	.dbg	line, "../common/libsedoric.h", 19
	jsr     pushax
;
; sed_fname = fname;
;
	.dbg	line, "../common/libsedoric.h", 21
	ldy     #$05
	jsr     ldaxysp
	sta     _sed_fname
	stx     _sed_fname+1
;
; sed_begin = buf;
;
	.dbg	line, "../common/libsedoric.h", 22
	ldy     #$03
	jsr     ldaxysp
	sta     _sed_begin
	stx     _sed_begin+1
;
; sed_end = (char*)sed_begin+len-1;
;
	.dbg	line, "../common/libsedoric.h", 23
	jsr     ldax0sp
	clc
	ldy     #$02
	adc     (sp),y
	pha
	txa
	iny
	adc     (sp),y
	tax
	pla
	jsr     decax1
	sta     _sed_end
	stx     _sed_end+1
;
; sed_size = len;
;
	.dbg	line, "../common/libsedoric.h", 24
	jsr     ldax0sp
	sta     _sed_size
	stx     _sed_size+1
;
; sed_savefile();    
;
	.dbg	line, "../common/libsedoric.h", 25
	jsr     _sed_savefile
;
; return sed_err;
;
	.dbg	line, "../common/libsedoric.h", 26
	lda     _sed_err
	ldx     _sed_err+1
;
; }
;
	.dbg	line, "../common/libsedoric.h", 27
	jmp     incsp6
	.dbg	line

.endproc

; ---------------------------------------------------------------
; int __near__ loadfile (__near__ const unsigned char *, __near__ void *, __near__ unsigned int *)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_loadfile: near

	.import		_sed_loadfile
	.dbg	func, "loadfile", "00", extern, "_loadfile"
	.dbg	sym, "fname", "00", auto, 4
	.dbg	sym, "buf", "00", auto, 2
	.dbg	sym, "len", "00", auto, 0
	.dbg	sym, "sed_loadfile", "00", extern, "_sed_loadfile"

.segment	"CODE"

;
; {
;
	.dbg	line, "../common/libsedoric.h", 30
	jsr     pushax
;
; sed_fname = fname;
;
	.dbg	line, "../common/libsedoric.h", 32
	ldy     #$05
	jsr     ldaxysp
	sta     _sed_fname
	stx     _sed_fname+1
;
; sed_begin = buf;
;
	.dbg	line, "../common/libsedoric.h", 33
	ldy     #$03
	jsr     ldaxysp
	sta     _sed_begin
	stx     _sed_begin+1
;
; sed_loadfile();    
;
	.dbg	line, "../common/libsedoric.h", 34
	jsr     _sed_loadfile
;
; *len = sed_size;
;
	.dbg	line, "../common/libsedoric.h", 35
	jsr     ldax0sp
	sta     ptr1
	stx     ptr1+1
	lda     _sed_size
	ldy     #$00
	sta     (ptr1),y
	iny
	lda     _sed_size+1
	sta     (ptr1),y
;
; return sed_err;
;
	.dbg	line, "../common/libsedoric.h", 36
	lda     _sed_err
	ldx     _sed_err+1
;
; }
;
	.dbg	line, "../common/libsedoric.h", 37
	jmp     incsp6
	.dbg	line

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

	.dbg	func, "main", "00", extern, "_main"

.segment	"CODE"

;
; reset_exos();
;
	.dbg	line, "master.c", 17
	jsr     _reset_exos
;
; sleep(32767);
;
	.dbg	line, "master.c", 18
	ldx     #$7F
	lda     #$FF
	sta     __sleept
	stx     __sleept+1
	jsr     __sleep
;
; paper(0);
;
	.dbg	line, "master.c", 20
	ldx     #$00
	txa
	jsr     _paper
;
; ink(7);
;
	.dbg	line, "master.c", 21
	ldx     #$00
	lda     #$07
	jsr     _ink
;
; cls();
;
	.dbg	line, "master.c", 22
	jsr     _cls
;
; len = 0;
;
	.dbg	line, "master.c", 24
	lda     #$00
	sta     _len
	sta     _len+1
;
; printf("\n\n\n\n\n\n\n\n\n\nLoading SLAVE.COM");
;
	.dbg	line, "master.c", 25
	lda     #<(L002C)
	ldx     #>(L002C)
	jsr     pushax
	ldy     #$02
	jsr     _printf
;
; rc = loadfile("SLAVE.COM", slave_buffer, &len);
;
	.dbg	line, "master.c", 26
	lda     #<(L0030)
	ldx     #>(L0030)
	jsr     pushax
	lda     _slave_buffer
	ldx     _slave_buffer+1
	jsr     pushax
	lda     #<(_len)
	ldx     #>(_len)
	jsr     _loadfile
	sta     _rc
	stx     _rc+1
;
; ppc.cmd = 0;
;
	.dbg	line, "master.c", 28
	lda     #$00
	sta     _ppc
;
; ppc.flags = (PP_AUTO|PP_SLAVEALL); // autoexec + 3 slaves;
;
	.dbg	line, "master.c", 29
	lda     #$87
	sta     _ppc+1
;
; ppc.dst_addr = ppc.src_addr = slave_buffer;
;
	.dbg	line, "master.c", 30
	lda     _slave_buffer
	ldx     _slave_buffer+1
	sta     _ppc+6
	stx     _ppc+6+1
	sta     _ppc+2
	stx     _ppc+2+1
;
; ppc.length = len;
;
	.dbg	line, "master.c", 31
	lda     _len+1
	sta     _ppc+4+1
	lda     _len
	sta     _ppc+4
;
; printf("\nSending SLAVE.COM (%d%d bytes)", len/100, len%100);
;
	.dbg	line, "master.c", 33
	lda     #<(L0044)
	ldx     #>(L0044)
	jsr     pushax
	lda     _len
	ldx     _len+1
	jsr     pushax
	lda     #$64
	jsr     tosudiva0
	jsr     pushax
	lda     _len
	ldx     _len+1
	jsr     pushax
	lda     #$64
	jsr     tosumoda0
	jsr     pushax
	ldy     #$06
	jsr     _printf
;
; pp_send(&ppc);
;
	.dbg	line, "master.c", 34
	lda     #>(_ppc)
	sta     __pp_cmd_ptr+1
	lda     #<(_ppc)
	sta     __pp_cmd_ptr
	jsr     __pp_send
;
; printf("\nMaster done.");
;
	.dbg	line, "master.c", 35
	lda     #<(L004D)
	ldx     #>(L004D)
	jsr     pushax
	ldy     #$02
	jsr     _printf
;
; slave_code();
;
	.dbg	line, "master.c", 38
	lda     _slave_code
	ldx     _slave_code+1
	jmp     callax
	.dbg	line

.endproc

